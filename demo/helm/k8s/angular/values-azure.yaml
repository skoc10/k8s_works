# auth-server sub-chart override
backend:
  config:
    selfUrl: https://backend-angular.abpdemo.com
    angularUrl: https://web-angular.abpdemo.com
    corsOrigins: https://web-angular.abpdemo.com
    redirectAllowedUrls: https://web-angular.abpdemo.com
    disablePII: "true"
    healthCheckUrl: https://backend-angular.abpdemo.com/health-status
    connectionStrings:
      default: "Data Source=demo-ms-sqldb.demo-ms,1433;Database=angular;User Id=sa;Password=myPassw@rd;TrustServerCertificate=True;"
    authServer:
      requireHttpsMetadata: "true"
      authority: https://backend-angular.abpdemo.com
    dotnetEnv: "Production"
    aspnetCoreUrls: "http://+:80;"
    redisHost: angular-st-redis
  ingress:
    host: backend-angular.abpdemo.com
  image:
    repository: skoc10/azureappsangular-api
    tag: 0.0.3

# dbmigrator sub-chart override
dbmigrator:
  config:
    connectionStrings:
      default: "Data Source=demo-ms-sqldb.demo-ms,1433;Database=angular;User Id=sa;Password=myPassw@rd;TrustServerCertificate=True;"
    openIddictApplications:
      azureAppsAngularAppRootUrl: "https://web-angular.abpdemo.com"
      azureAppsAngularSwaggerRootUrl: "https://backend-angular.abpdemo.com"
    redisConfiguration: "angular-st-redis"
  image:
    repository: skoc10/azureappsangular-db-migrator
    tag: 0.0.2
    pullPolicy: IfNotPresent  


# Angular back-office application sub-chart override
angular:
  config:
    selfUrl: https://web-angular.abpdemo.com
    authServer:
      authority: https://backend-angular.abpdemo.com
      requireHttpsMetadata: "false"
      responseType: "code"
      strictDiscoveryDocumentValidation: false
      skipIssuerCheck: true
  ingress:
    host: web-angular.abpdemo.com
  image:
    repository: skoc10/azureappsangular-angular
    tag: 0.0.2
    pullPolicy: IfNotPresent
# Default values for angular.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
